---
grafana:
  ldap_host: "{{ conf['ldap_hostname'] }}"
  ldap_account: "cn={{ conf['ldap_readonly_user_username'] }},{{ conf['ldap_base_dn'] }}"
  ldap_account_password: "{{ conf['ldap_readonly_user_password'] }}"

  ldap_base_dn: "ou=users,{{ conf['ldap_base_dn'] }}"
  ldap_search_filter: "(cn=%s)"

  ldap_name: "givenName"
  ldap_surname: "sn"
  ldap_username: "cn"
  ldap_member_of: "memberOf"
  ldap_email:  "email"

  admin_group_dn: "cn=grafana_admins,ou=groups,{{ conf['ldap_base_dn'] }}"
  editor_group_dn: "cn=grafana_editors,ou=groups,{{ conf['ldap_base_dn'] }}"

  plugins:
    - flant-statusmap-panel
    - grafana-piechart-panel
    - grafana-polystat-panel
    - michaeldmoore-multistat-panel
    - vonage-status-panel
    - yesoreyeram-boomtable-panel
    - camptocamp-prometheus-alertmanager-datasource
    - natel-influx-admin-panel

grafana_docker_service: |2
    grafana:
      container_name: {{project}}-grafana
      image: {{registry_url}}{{project}}-grafana:latest
      user: "0"
      restart: unless-stopped
      ports:
        - "{{bind_ip}}3000:3000"
      environment:
        GF_AUTH_BASIC_ENABLED: "false"
        GF_RENDERING_SERVER_URL: "http://renderer:8081/render"
        GF_RENDERING_CALLBACK_URL: "http://grafana:3000/"
        GF_LOG_FILTERS: "rendering:debug"
        GF_SERVER_ROOT_URL: "https://grafana.{{ conf['domain'] }}/"
        GF_SERVER_DOMAIN: '{{ conf['domain'] }}'
      volumes:
        - {{docker_data_path}}/grafana/var/lib/grafana:/var/lib/grafana
        - {{docker_data_path}}/grafana/etc/grafana:/etc/grafana
      entrypoint:
        - "/entrypoint.sh"
        - "/run.sh"
      networks:
        - net

    renderer:
      container_name: {{project}}-renderer
      image: {{registry_url}}{{project}}-grafana-image-renderer:latest
      restart: unless-stopped
      environment:
        ENABLE_METRICS: 'true'
      depends_on:
        - grafana
      networks:
        - net
